name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

env:
  GOOGLE_APPLICATION_CREDENTIALS: ./cred/sa_key.json
  # You might want set this to latest stable version https://www.terraform.io/downloads.html
  TERRAFORM_VER: 1.1.5

jobs:
  data-services-test:
    name: 'Data Services Test'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./test

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the specified version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VER }}

    - name: Version
      run: terraform version

    - name: export key
      run: mkdir cred && echo '${{ secrets.TF_ADMIN_KEY_TEST }}' > cred/sa_key.json

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run:  terraform init

    - name: Terraform Validate
      run: terraform validate

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt  -check=true -write=false -diff=true .

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color | tee plan-output.txt

    - name: Get Plan summary
      id: summary
      run: |
        echo "##[name=summary;]$(cat plan-output.txt | grep "Plan:\|No changes." | sed "s/Plan://")" >> $GITHUB_OUTPUT

    - name: comment on PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ¤– \`${{ github.job }}\`
          \`\`\`${{ steps.summary.outputs.summary }}\`\`\`
          <details>
            <summary>
              Show Plan :
            </summary>

            \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Status: \`${{ steps.plan.outcome }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

      # On push to master, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
